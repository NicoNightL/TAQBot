import sqlite3
from typing import Dict


def init_db():
    '''–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö SQLite –∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏'''
    conn = sqlite3.connect('app/database.db')
    cursor = conn.cursor()

    # –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É FAQ
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS faq (
        id INTEGER PRIMARY KEY,
        theme TEXT NOT NULL,
        question TEXT NOT NULL,
        answer TEXT NOT NULL,
        keywords TEXT NOT NULL
    )
    ''')

    # –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS user_settings (
        user_id INTEGER PRIMARY KEY,
        notifications BOOLEAN DEFAULT 1,
        language TEXT DEFAULT 'ru'
    )
    ''')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—É—Å—Ç–∞ –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ FAQ
    cursor.execute('SELECT COUNT(*) FROM faq')
    if cursor.fetchone()[0] == 0:
        # –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        initial_data = [
            (0, '–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã', '–ö–∞–∫ –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç Yandex?',
             '–î–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç Yandex –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É https://passport.yandex.ru, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω –∏–ª–∏ email –∏ –ø–∞—Ä–æ–ª—å, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ ¬´–í–æ–π—Ç–∏¬ª.',
             '–ª–æ–≥–∏–Ω,–≤—Ö–æ–¥,–∞–∫–∫–∞—É–Ω—Ç,–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'),
            (1, '–ü–æ—á—Ç–∞', '–ö–∞–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ Yandex –ü–æ—á—Ç–µ?',
             '–ß—Ç–æ–±—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø, –Ω–∞–∂–º–∏—Ç–µ ¬´–ù–µ –ø–æ–º–Ω—é –ø–∞—Ä–æ–ª—å¬ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—Ö–æ–¥–∞. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω –∏–ª–∏ email, —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ª–∏—á–Ω–æ—Å—Ç–∏ –∏ —Å–±—Ä–æ—Å—å—Ç–µ –ø–∞—Ä–æ–ª—å.',
             '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ,–ø–∞—Ä–æ–ª—å,–¥–æ—Å—Ç—É–ø,–ø–æ—á—Ç–∞'),
            (2, '–î–∏—Å–∫', '–ö–∞–∫ —É–≤–µ–ª–∏—á–∏—Ç—å –º–µ—Å—Ç–æ –Ω–∞ Yandex –î–∏—Å–∫–µ?',
             '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å, –∫—É–ø–∏–≤ –ø–æ–¥–ø–∏—Å–∫—É Yandex 360 –∏–ª–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–≤ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –±–æ–Ω—É—Å—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑–¥–µ–ª ¬´–¢–∞—Ä–∏—Ñ—ã¬ª –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –î–∏—Å–∫–∞.',
             '—Ö—Ä–∞–Ω–∏–ª–∏—â–µ,–º–µ—Å—Ç–æ,–¥–∏—Å–∫,–ø–æ–¥–ø–∏—Å–∫–∞'),
            (3, '–ú–µ—Ç—Ä–∏–∫–∞', '–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç –≤ Yandex –ú–µ—Ç—Ä–∏–∫—É?',
             '1. –ó–∞–π–¥–∏—Ç–µ –≤ –ú–µ—Ç—Ä–∏–∫—É (https://metrika.yandex.ru). 2. –ù–∞–∂–º–∏—Ç–µ ¬´–î–æ–±–∞–≤–∏—Ç—å —Å—á—ë—Ç—á–∏–∫¬ª. 3. –£–∫–∞–∂–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —Å–∞–π—Ç–∞ (URL, –Ω–∞–∑–≤–∞–Ω–∏–µ). 4. –ü—Ä–∏–º–∏—Ç–µ —É—Å–ª–æ–≤–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ. 5. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ–¥ —Å—á—ë—Ç—á–∏–∫–∞ –Ω–∞ —Å–∞–π—Ç.',
             '–º–µ—Ç—Ä–∏–∫–∞,–∞–Ω–∞–ª–∏—Ç–∏–∫–∞,—Å–∞–π—Ç,—Å—á—ë—Ç—á–∏–∫'),
            (4, '–ü–æ—á—Ç–∞', '–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –æ—Ç Yandex –ü–æ—á—Ç—ã?',
             '1. –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç. 2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–∏–∫–æ–Ω–∫–∞ —à–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏). 3. –í—ã–±–µ—Ä–∏—Ç–µ ¬´–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å¬ª. 4. –ù–∞–∂–º–∏—Ç–µ ¬´–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å¬ª –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.',
             '–ø–∞—Ä–æ–ª—å,–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å,–ø–æ—á—Ç–∞,–∏–∑–º–µ–Ω–∏—Ç—å'),
            (5, '–î–∏—Å–∫', '–ö–∞–∫ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Ñ–∞–π–ª–æ–º —Å Yandex –î–∏—Å–∫–∞?',
             '1. –û—Ç–∫—Ä–æ–π—Ç–µ Yandex –î–∏—Å–∫. 2. –ù–∞–≤–µ–¥–∏—Ç–µ –∫—É—Ä—Å–æ—Ä –Ω–∞ —Ñ–∞–π–ª –∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è¬ª. 3. –í—ã–±–µ—Ä–∏—Ç–µ ¬´–°—Å—ã–ª–∫–∞¬ª –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ email. 4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (–ø—Ä–æ—Å–º–æ—Ç—Ä/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ).',
             '–ø–æ–¥–µ–ª–∏—Ç—å—Å—è,—Ñ–∞–π–ª,–¥–∏—Å–∫,–¥–æ—Å—Ç—É–ø')
        ]
        cursor.executemany(
            'INSERT INTO faq (id, theme, question, answer, keywords) VALUES (?, ?, ?, ?, ?)',
            initial_data
        )

    conn.commit()
    conn.close()


def load_database():
    '''–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –≤–æ–ø—Ä–æ—Å–æ–≤'''
    conn = sqlite3.connect('app/database.db')
    conn.row_factory = sqlite3.Row
    cursor = conn.cursor()
    cursor.execute('SELECT * FROM faq ORDER BY id')
    result = [dict(row) for row in cursor.fetchall()]
    conn.close()
    return result


def get_user_settings(user_id: int) -> Dict:
    '''–ü–æ–ª—É—á–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é'''
    conn = sqlite3.connect('app/database.db')
    cursor = conn.cursor()

    cursor.execute(
        'SELECT notifications, language FROM user_settings WHERE user_id = ?',
        (user_id,)
    )
    result = cursor.fetchone()

    if result:
        settings = {'notifications': bool(result[0]), 'language': result[1]}
    else:
        settings = {'notifications': True, 'language': 'ru'}
        cursor.execute(
            'INSERT INTO user_settings (user_id, notifications, language) VALUES (?, ?, ?)',
            (user_id, 1, 'ru')
        )
        conn.commit()

    conn.close()
    return settings


def update_notification_setting(user_id: int, enabled: bool):
    '''–û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'''
    conn = sqlite3.connect('app/database.db')
    cursor = conn.cursor()

    cursor.execute(
        'INSERT OR REPLACE INTO user_settings (user_id, notifications) VALUES (?, ?)',
        (user_id, int(enabled))
    )

    conn.commit()
    conn.close()


def update_language_setting(user_id: int, language: str):
    '''–û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É —è–∑—ã–∫–∞ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'''
    conn = sqlite3.connect('app/database.db')
    cursor = conn.cursor()

    cursor.execute(
        'INSERT OR REPLACE INTO user_settings (user_id, language) VALUES (?, ?)',
        (user_id, language)
    )

    conn.commit()
    conn.close()


def get_current_settings_message(user_id: int) -> str:
    '''–§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'''
    settings = get_user_settings(user_id)
    notifications = '‚úîÔ∏è –≤–∫–ª—é—á–µ–Ω—ã' if settings['notifications'] else '‚ùå –≤—ã–∫–ª—é—á–µ–Ω—ã'
    language = 'üá∑üá∫ –†—É—Å—Å–∫–∏–π' if settings['language'] == 'ru' else 'üá¨üáß English'
    return (
        f'–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n'
        f'üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {notifications}\n'
        f'üåê –Ø–∑—ã–∫: {language}'
    )


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è
init_db()

# –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DATABASE = load_database()

# –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ /help
BOT_COMMANDS = [
    ('/start', '–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞'),
    ('/help', '–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥')
]
